terraform {
  required_providers {
    azapi = {
      source  = "azure/azapi"
      version = "~> 1.0"
    }
  }
}

data "azapi_resource_action" "vm_skus" {
  type        = "Microsoft.Compute/locations/vmSizes@2022-03-01"
  resource_id = "/subscriptions/${var.subscription_id}/providers/Microsoft.Compute/locations/${var.location}"
  action      = "list"

  response_export_values = ["value"]
}

locals {
  vm_skus = jsondecode(data.azapi_resource_action.vm_skus.output).value
  valid_vm_size = contains([
    for sku in local.vm_skus : sku.name
  ], var.vm_size)
}

resource "null_resource" "fail_if_invalid_vm_size" {
  count = local.valid_vm_size ? 0 : 1

  provisioner "local-exec" {
    command = "echo 'ERROR: VM size ${var.vm_size} not available in ${var.location}' && exit 1"
  }
}

resource "azurerm_linux_virtual_machine" "vm" {
  count = local.valid_vm_size ? 1 : 0

  name                = var.name
  location            = var.location
  size                = var.vm_size
  resource_group_name = var.resource_group_name
  # other settings...
}
