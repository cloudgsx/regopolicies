#!/bin/bash

# Update system packages
apt update -y

# Install Python 3 and pip
apt install -y python3 python3-pip

# Install Flask
pip3 install flask

# Create application directory
mkdir -p /opt/metadata-app
cd /opt/metadata-app

# Create Flask application
cat > /opt/metadata-app/app.py <<'EOF'
from flask import Flask, render_template_string
import urllib.request

app = Flask(__name__)

def get_metadata(path):
    """Fetch metadata from EC2 instance metadata service (IMDSv2)"""
    try:
        # First, get a token for IMDSv2
        token_url = "http://169.254.169.254/latest/api/token"
        token_request = urllib.request.Request(
            token_url,
            headers={"X-aws-ec2-metadata-token-ttl-seconds": "21600"},
            method="PUT"
        )
        with urllib.request.urlopen(token_request, timeout=2) as response:
            token = response.read().decode('utf-8')
        
        # Now fetch the metadata using the token
        metadata_url = f"http://169.254.169.254/latest/meta-data/{path}"
        metadata_request = urllib.request.Request(
            metadata_url,
            headers={"X-aws-ec2-metadata-token": token}
        )
        with urllib.request.urlopen(metadata_request, timeout=2) as response:
            return response.read().decode('utf-8')
    except Exception as e:
        return f"Error: {str(e)}"

@app.route('/')
def index():
    # Fetch metadata
    instance_id = get_metadata('instance-id')
    instance_type = get_metadata('instance-type')
    availability_zone = get_metadata('placement/availability-zone')
    
    # HTML template
    html = """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>EC2 Instance Metadata</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 50px auto;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                background-color: white;
                border-radius: 8px;
                padding: 30px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            h1 {
                color: #232f3e;
                border-bottom: 3px solid #ff9900;
                padding-bottom: 10px;
            }
            .metadata-item {
                margin: 20px 0;
                padding: 15px;
                background-color: #f9f9f9;
                border-left: 4px solid #ff9900;
            }
            .label {
                font-weight: bold;
                color: #232f3e;
                margin-bottom: 5px;
            }
            .value {
                color: #555;
                font-size: 18px;
            }
            .refresh-btn {
                background-color: #ff9900;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
                margin-top: 20px;
            }
            .refresh-btn:hover {
                background-color: #ec7211;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>EC2 Instance Metadata</h1>
            
            <div class="metadata-item">
                <div class="label">Instance ID:</div>
                <div class="value">{{ instance_id }}</div>
            </div>
            
            <div class="metadata-item">
                <div class="label">Instance Type:</div>
                <div class="value">{{ instance_type }}</div>
            </div>
            
            <div class="metadata-item">
                <div class="label">Availability Zone:</div>
                <div class="value">{{ availability_zone }}</div>
            </div>
            
            <button class="refresh-btn" onclick="location.reload()">Refresh Metadata</button>
        </div>
    </body>
    </html>
    """
    
    return render_template_string(html, 
                                 instance_id=instance_id,
                                 instance_type=instance_type,
                                 availability_zone=availability_zone)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80)
EOF

# Create systemd service file for Flask app
cat > /etc/systemd/system/metadata-app.service <<'EOF'
[Unit]
Description=EC2 Metadata Flask Application
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/opt/metadata-app
ExecStart=/usr/bin/python3 /opt/metadata-app/app.py
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

# Set proper permissions
chmod 644 /opt/metadata-app/app.py
chmod 644 /etc/systemd/system/metadata-app.service

# Reload systemd, enable and start the service
systemctl daemon-reload
systemctl enable metadata-app.service
systemctl start metadata-app.service
