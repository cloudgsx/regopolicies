Title:
Create a Terraform Module for Azure Activity Log-Based Alerts

As a:
Cloud Infrastructure Engineer

I want to:
Create a reusable and scalable Terraform module that configures Azure Activity Log-based alerts with notifications.

So that I can:
Monitor critical Azure activities and notify relevant stakeholders through email and SMS to ensure timely awareness and response to changes or issues in the Azure environment.

Acceptance Criteria:

Terraform Module Structure

The module must include main.tf, variables.tf, and outputs.tf files.
The module must support the configuration of Azure Activity Log alerts and associated Action Groups for notifications.
Activity Log Alert Functionality

The module should configure alerts based on specified activity log categories (e.g., "Administrative", "ServiceHealth").
The module should allow users to define specific operation names to monitor (e.g., Microsoft.Resources/deployments/write).
The module should support specifying multiple Azure resource scopes (e.g., subscription IDs) for the alert.
Action Group Integration

The module must create an Action Group with:
Email-based notifications.
SMS-based notifications.
Users must be able to configure the Action Group's short name, email receiver, and SMS receiver details.
Variables and Flexibility

All module inputs (e.g., resource group name, action group details, alert criteria) must be parameterized using variables.tf.
Users must be able to define multiple operation names and scopes via input variables.
Outputs

The module should output the Action Group ID and the Alert ID for use in other Terraform configurations.
Documentation

Provide clear instructions for using the module, including example usage.
Document all input variables, output values, and expected behavior of the module.
Validation

Ensure that the module supports Azure Provider version 3.x and above.
Validate the module with a test configuration that sets up a sample alert and verifies notification delivery.
Additional Notes:

This Terraform module should align with best practices for Infrastructure as Code (IaC), including clear variable naming, reuse, and modularity.
Include comments in the code to explain complex logic, if any.
Emphasize scalability and reusability for similar monitoring needs in other Azure projects.
Definition of Done:

The module is implemented, tested, and deployed successfully in a development environment.
Notifications via email and SMS are verified to work as expected when a monitored operation occurs.
Documentation and example usage are reviewed and approved by the team.
The code is committed to the version control system (e.g., GitHub) with an appropriate README file.
