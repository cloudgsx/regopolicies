# ✅ Azure VM Size Validation with Retry (Terraform)

This module validates whether a specified Azure VM size (`vm_size`) is available in a given Azure region (`location`). It simulates retry logic to handle eventual consistency in the Azure API, ensuring your deployments are blocked unless the VM size is verifiably available.

---

## 🧩 Features

- ✅ Validates VM size availability in a specific Azure region
- 🔁 Retries validation up to a configurable number of attempts
- ⏱ Delays between retries using `time_sleep`
- 🔄 Forces re-evaluation of Azure SKUs by injecting randomness
- ❌ Fails with a clear error after all retries if no match is found
- 📦 Outputs detailed results including matching SKUs and retry attempts

---

## ⚙️ How It Works

1. Generates random IDs to force unique Azure API calls on each retry.
2. Calls the Azure API up to `max_retries` times to fetch available VM SKUs for the region.
3. Introduces a delay (`retry_delay_seconds`) between each attempt unless the VM size becomes available early.
4. Validates whether the desired VM size is present in any of the responses.
5. Throws a Terraform `error()` if no match is found after all retries.

---

## 🔧 Configuration

### Required Variables

| Name       | Description                        | Type   |
|------------|------------------------------------|--------|
| `vm_size`  | The Azure VM SKU to validate       | string |
| `location` | The Azure region to check in       | string |

### Optional Locals (can be changed inside the config)

| Name                 | Description                          | Default |
|----------------------|--------------------------------------|---------|
| `max_retries`        | Number of retry attempts             | `3`     |
| `retry_delay_seconds`| Time to wait (in seconds) between retries | `5`     |

---

## 📤 Outputs

| Name                     | Description                                           |
|--------------------------|-------------------------------------------------------|
| `vm_size_validation_check` | Whether the specified VM size is available (`true`/`false`) |
| `retry_attempts_made`    | Number of retry attempts that were executed          |
| `matched_skus`           | List of matched SKUs returned from the API           |

---

## ❗ Important Notes

- Terraform data sources are typically only fetched once per plan.  
  ✅ This module bypasses that by dynamically injecting a `rand` value into the API request, forcing re-evaluation.
- The retry logic does **not depend on external scripts or `null_resource`**.
- This is fully compatible with CI/CD and production environments.

---

## 🧪 Example Usage

```hcl
module "vm_size_validation" {
  source   = "./modules/validate_vm_size"
  vm_size  = "Standard_D2s_v3"
  location = "eastus"
}
🛑 Failure Scenario
If the specified vm_size is not found after all retries:

pgsql
Copiar
Editar
Error: VM size 'Standard_D2s_v3' is not available in 'eastus' after 3 attempts!
✅ Success Scenario
Terraform continues, and the following outputs are available:

bash
Copiar
Editar
terraform output vm_size_validation_check
# true

terraform output matched_skus
# [
#   {
#     name = "Standard_D2s_v3",
#     ...
#   }
# ]
