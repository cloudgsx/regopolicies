package test

import (
    "testing"
    "github.com/gruntwork-io/terratest/modules/terraform"
)

func TestTerraformMockApply(t *testing.T) {
    // Define the options for your Terraform test
    terraformOptions := &terraform.Options{
        // The path to where your Terraform code is located
        TerraformDir: "./",
        
        // Variables to pass to your Terraform code
        Vars: map[string]interface{}{
            "subscription_id": "mock_subscription_id",
            "tenant_id":       "mock_tenant_id",
            "resource_group":  "mock_resource_group",
            "vm_name":         "mock_vm_name",
        },
        
        // Set environment variables, e.g., for Terraform logging
        EnvVars: map[string]string{
            "TF_LOG": "DEBUG", // Enable Terraform debug logging for detailed output
        },
        NoColor: true, // Disable colored output for easier parsing
    }

    // Run `terraform init` and `terraform plan` first
    terraform.InitAndPlan(t, terraformOptions)

    // Run `terraform apply` with the `-refresh=false` flag
    _, err := terraform.RunTerraformCommandE(t, terraformOptions, "apply", "-refresh=false", "-auto-approve")
    if err != nil {
        t.Fatalf("Failed to run Terraform apply: %v", err)
    }

    // Optionally, log success or validate results
    t.Log("Terraform mock apply executed successfully with -refresh=false.")
}
