User Story: Investigate and Configure Network Connectivity Monitoring Using Azure Network Watcher
Title:
Investigate and implement connectivity monitoring between VMs using Azure Network Watcher and prepare Terraform code for deployment.

Description:
As a DevOps Engineer, I want to investigate the connectivity testing capabilities of Azure Network Watcher and configure Connection Monitor between two VMs, so that I can ensure reliable communication and provide Terraform code for automated deployment.

Acceptance Criteria:
Azure Network Watcher is enabled in the region where the VMs are deployed.
Connection Monitor is set up between two specified VMs to monitor connectivity.
Metrics such as latency, packet loss, and connectivity status are successfully captured.
A proof-of-concept (PoC) is created to demonstrate manual setup in the Azure portal.
Terraform code is written, tested, and validated to automate the setup of Network Watcher and Connection Monitor.
Tasks:
Investigation:
Research the capabilities of Azure Network Watcher, focusing on Connection Monitor.
Identify prerequisites for enabling and using Network Watcher in the required region.
Determine supported protocols (TCP, ICMP, HTTP) and select the appropriate ones for the testing use case.
Manual Configuration:
Enable Network Watcher in the Azure portal for the target region.
Configure Connection Monitor manually in the Azure portal:
Source VM: Select the first VM.
Destination VM: Specify the second VM’s private IP or hostname.
Protocol: Set TCP, ICMP, or HTTP based on requirements.
Verify the results, ensuring that latency, packet loss, and connectivity data are captured.
Terraform Automation:
Write Terraform code to:
Enable Network Watcher in the specified region.
Automate the creation of Connection Monitor with user-defined parameters (source VM, destination VM, protocol).
Test the Terraform code in a development environment.
Document the Terraform workflow and any dependencies.
Output and Documentation:
Summarize findings from the investigation, including any limitations or key insights.
Provide clear documentation for:
Manual setup process.
Terraform code structure and execution steps.
Priority:
High – This task is foundational to the Monitoring and Alarm project and enables Layer 3 connectivity checks between systems.

Definition of Done (DoD):
Investigation findings are documented.
Network Watcher is manually configured, and results are validated.
Terraform code is delivered, tested, and ready for integration into the larger project.
